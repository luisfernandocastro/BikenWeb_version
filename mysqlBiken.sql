-- MySQL Script generated by MySQL Workbench
-- Sat May 22 20:13:57 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema BIKEN_BDPY
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `BIKEN_BDPY` ;

-- -----------------------------------------------------
-- Schema BIKEN_BDPY
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `BIKEN_BDPY` DEFAULT CHARACTER SET utf8 ;
USE `BIKEN_BDPY` ;

-- -----------------------------------------------------
-- Table `BIKEN_BDPY`.`Tipocontrato`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BIKEN_BDPY`.`Tipocontrato` (
  `idTipocontrato` INT NOT NULL COMMENT 'Esta tabla contiene la clasificacion del tipo de contrato que debe llenar el usuario,teniendo en cuenta si es quien presta el servicio o el que adquiere este.\n\nEjemplo: \n          1. Contrato arrendador\n          2. Contrato arrendatario',
  `Nombre` VARCHAR(45) NOT NULL COMMENT 'En este campo se ingresa el nombre del tipo de contrato que va a llenar el usuario, teniendo en cuenta si es quien presta el servicio o adquiere este.\nEjemplo: 1.Contrato arrendamiento\n               2.Contrato Prestación.',
  `Descripcion` VARCHAR(45) NULL COMMENT 'En este campo se incresa una descripcion del tipo de contrato que va a llenar el usuario, es opcional.',
  PRIMARY KEY (`idTipocontrato`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BIKEN_BDPY`.`Persona`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BIKEN_BDPY`.`Persona` (
  `idPersona` INT NOT NULL AUTO_INCREMENT COMMENT 'Esta tabla contiene información (datos personales) empleada para el registro y el inicio de sesión del usuario',
  `Nombres` VARCHAR(50) NOT NULL COMMENT 'En este campo se ingresan los nombres completos del usuario.',
  `Apellidos` VARCHAR(50) NOT NULL COMMENT 'En este campo se ingresan los apellidos completos del usuario',
  `NumIdentificacion` BIGINT(12) NOT NULL COMMENT 'En este campo se ingresa el número de identificación del usuario.',
  `NumCelular` BIGINT(10) NOT NULL COMMENT 'En este campo se ingresa el número de celular del usuario.',
  `NumTelefono` BIGINT(10) NULL COMMENT 'En este campo se ingresa el número de télefono fijo del usuario,teniendo en cuenta que es opcional.',
  `CorreoElectronico` VARCHAR(45) NOT NULL COMMENT 'En este campo se ingresa un correo electronico que el usuario establezca  para poder acceder.',
  PRIMARY KEY (`idPersona`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BIKEN_BDPY`.`Categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BIKEN_BDPY`.`Categoria` (
  `idModelo` INT NOT NULL AUTO_INCREMENT COMMENT 'En esta tabla se especifica el nombre del modelo de la bicicleta que el usuario arrendador va a subir.\n',
  `Nombre` VARCHAR(45) NOT NULL COMMENT 'En este campo se ingresa el nombre del modelo de la bicicleta \n\nEjemplo: Carretera\n               Ruta\n               Montaña',
  PRIMARY KEY (`idModelo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BIKEN_BDPY`.`Bicicletas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BIKEN_BDPY`.`Bicicletas` (
  `idBicicletas` INT NOT NULL AUTO_INCREMENT COMMENT 'Esta tabla contiene las caracteristicas que el usuario arrendador debe llenar respecto a su bicicleta, para asi subir esta al sitio web.',
  `Color` VARCHAR(50) NOT NULL COMMENT 'En este campo se ingresa el nombre del color de la bicicleta que va a subir el usuario arrendador al sitio web o app.',
  `Material` TEXT NOT NULL COMMENT 'En este campo  se ingresa el material en que esta elaborada la bicicleta que el usuarrio arrendador va a subir al sitio web o app.\n\nEjemplo:\n              Titanio\n               Acero\n               Hierro\n               Aluminio',
  `Categoria` INT NOT NULL,
  `PrecioAlquiler` DECIMAL(6,3) NOT NULL COMMENT 'En este campo se ingresa el precio de alquiler que el usuario arrendador solicita por su bicicleta.\n',
  `Foto` VARCHAR(50) NOT NULL COMMENT 'En este campo se sube una imagen de la bicicleta que el usuario arrendador va a subir al sitio web, para que sea alquilada por otros usuarios.\n\nEjemplo: Imagen PNG\n               Imagen JPG',
  PRIMARY KEY (`idBicicletas`),
  INDEX `fk_Bicicletas_Modelo1_idx` (`Categoria` ASC),
  CONSTRAINT `fk_Bicicletas_Modelo1`
    FOREIGN KEY (`Categoria`)
    REFERENCES `BIKEN_BDPY`.`Categoria` (`idModelo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BIKEN_BDPY`.`Contrato`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BIKEN_BDPY`.`Contrato` (
  `idContrato` INT NOT NULL AUTO_INCREMENT COMMENT 'Esta tabla contiene informacion la cual es necesaria para el alquiler de una bicicleta por parte de un usuario arrendatario \n\nEjemplo: Datos del arrendatario\n               Objeto de contrato\n               Observaciones\n               ',
  `CantidadBicicletas` INT NOT NULL COMMENT 'En este campo se ingresa el número de bicicletas que va alquilar el usuario arrendatario.',
  `FechaInicio` DATE NOT NULL COMMENT 'En este campo se ingresa la fecha de inicio del alquiler de la bicicleta,por parte del usuario arrendatario.',
  `FechaFin` DATE NOT NULL COMMENT 'En este campo se ingresa la fecha fin del alquiler de la bicicleta,por parte del usuario arrendatario.',
  `Tiempo` TIME NOT NULL COMMENT 'En este campo se ingresa el tiempo determinado de alquiler de la bicicleta.\n\nEjemplo:\n              1/2/3...Horas\n              Medio dia\n              1 dia\n              2 dias',
  `Observaciones` VARCHAR(100) NOT NULL COMMENT 'En este campo el usuario debe tener en cuenta el aceptar los terminos y condiciones que establece el contrato,una ves leidas las observaciones.',
  `Tipocontrato` INT NOT NULL,
  `Persona_idPersona` INT NOT NULL,
  `Bicicletas_idBicicletas` INT NOT NULL,
  PRIMARY KEY (`idContrato`),
  INDEX `fk_Contrato_Tipocontrato1_idx` (`Tipocontrato` ASC),
  INDEX `fk_Contrato_Persona1_idx` (`Persona_idPersona` ASC),
  INDEX `fk_Contrato_Bicicletas1_idx` (`Bicicletas_idBicicletas` ASC),
  CONSTRAINT `fk_Contrato_Tipocontrato1`
    FOREIGN KEY (`Tipocontrato`)
    REFERENCES `BIKEN_BDPY`.`Tipocontrato` (`idTipocontrato`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Contrato_Persona1`
    FOREIGN KEY (`Persona_idPersona`)
    REFERENCES `BIKEN_BDPY`.`Persona` (`idPersona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Contrato_Bicicletas1`
    FOREIGN KEY (`Bicicletas_idBicicletas`)
    REFERENCES `BIKEN_BDPY`.`Bicicletas` (`idBicicletas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BIKEN_BDPY`.`Reserva`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BIKEN_BDPY`.`Reserva` (
  `idReserva` INT NOT NULL AUTO_INCREMENT,
  `Bicicleta` INT NOT NULL,
  `DisponibleEn` TIME NULL,
  `Disponible` ENUM('SI', 'NO') NOT NULL,
  PRIMARY KEY (`idReserva`),
  INDEX `fk_Reserva_Bicicletas1_idx` (`Bicicleta` ASC),
  CONSTRAINT `fk_Reserva_Bicicletas1`
    FOREIGN KEY (`Bicicleta`)
    REFERENCES `BIKEN_BDPY`.`Bicicletas` (`idBicicletas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BIKEN_BDPY`.`Pagos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BIKEN_BDPY`.`Pagos` (
  `idPago` INT NOT NULL AUTO_INCREMENT COMMENT 'Esta tabla contiene informacion necesaria para el pago del alquiler de la bicicleta del usuario arrendatario al usuario arrendador.',
  `FechaPago` DATETIME NOT NULL COMMENT 'En este campo se establece una fecha especifica de pago del alquiler de la bicicleta, del usuario arrendatario al usuario arrendatario.',
  `TotalAlquiler` DECIMAL(6,3) NOT NULL COMMENT 'En este campo se ingresa el precio total de alquiler de la bicicleta.',
  `FechaMora` DATETIME NULL COMMENT 'En este campo se establece una fecha de pago a mas tiempo, para que el usuario arrendatario pueda cancelar el valor total de alquiler de la bicicleta.',
  `Contrato` INT NOT NULL,
  PRIMARY KEY (`idPago`),
  INDEX `fk_Pagos_Contrato1_idx` (`Contrato` ASC),
  CONSTRAINT `fk_Pagos_Contrato1`
    FOREIGN KEY (`Contrato`)
    REFERENCES `BIKEN_BDPY`.`Contrato` (`idContrato`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BIKEN_BDPY`.`Usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BIKEN_BDPY`.`Usuario` (
  `idUsuario` INT NOT NULL AUTO_INCREMENT,
  `Usuario` VARCHAR(20) NOT NULL,
  `Password` VARCHAR(100) NOT NULL,
  `Persona_idPersona` INT NOT NULL,
  PRIMARY KEY (`idUsuario`),
  INDEX `fk_Usuario_Persona1_idx` (`Persona_idPersona` ASC),
  CONSTRAINT `fk_Usuario_Persona1`
    FOREIGN KEY (`Persona_idPersona`)
    REFERENCES `BIKEN_BDPY`.`Persona` (`idPersona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BIKEN_BDPY`.`Modulo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BIKEN_BDPY`.`Modulo` (
  `idModulo` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idModulo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BIKEN_BDPY`.`perfilUsuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BIKEN_BDPY`.`perfilUsuario` (
  `idRoles` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(45) NOT NULL,
  `descripcionRol` TEXT NULL,
  `Usuario_idUsuario` INT NOT NULL,
  `Modulo_idModulo` INT NOT NULL,
  PRIMARY KEY (`idRoles`),
  INDEX `fk_RolesUsuario_Usuario1_idx` (`Usuario_idUsuario` ASC),
  INDEX `fk_RolesUsuario_Modulo1_idx` (`Modulo_idModulo` ASC),
  CONSTRAINT `fk_RolesUsuario_Usuario1`
    FOREIGN KEY (`Usuario_idUsuario`)
    REFERENCES `BIKEN_BDPY`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_RolesUsuario_Modulo1`
    FOREIGN KEY (`Modulo_idModulo`)
    REFERENCES `BIKEN_BDPY`.`Modulo` (`idModulo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BIKEN_BDPY`.`Catalogo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BIKEN_BDPY`.`Catalogo` (
  `idCatalogo` INT NOT NULL AUTO_INCREMENT COMMENT 'Es esta tabla  se tiene en cuenta la información de la tabla bicicleta, para que asi la bicicleta  sea subida a catálogo con una fecha determinada.\n\n',
  `Bicicleta` INT NOT NULL,
  `fechaHoraSubida` DATETIME NOT NULL COMMENT 'En este campo se ingresa una fecha y hora de subida de la bicicleta al catálogo',
  PRIMARY KEY (`idCatalogo`),
  INDEX `fk_Catalogo_Bicicletas1_idx` (`Bicicleta` ASC),
  CONSTRAINT `fk_Catalogo_Bicicletas1`
    FOREIGN KEY (`Bicicleta`)
    REFERENCES `BIKEN_BDPY`.`Bicicletas` (`idBicicletas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BIKEN_BDPY`.`Privilegios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BIKEN_BDPY`.`Privilegios` (
  `idPrivilegios` INT NOT NULL AUTO_INCREMENT,
  `privilegio` INT NOT NULL,
  `Modulo_idModulo` INT NOT NULL,
  PRIMARY KEY (`idPrivilegios`),
  INDEX `fk_Privilegios_Modulo1_idx` (`Modulo_idModulo` ASC),
  CONSTRAINT `fk_Privilegios_Modulo1`
    FOREIGN KEY (`Modulo_idModulo`)
    REFERENCES `BIKEN_BDPY`.`Modulo` (`idModulo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BIKEN_BDPY`.`TiempoPrestamo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BIKEN_BDPY`.`TiempoPrestamo` (
  `idTiempoDisponibilidad` INT NOT NULL,
  `Bicicletas_idBicicletas` INT NOT NULL,
  `Contrato_idContrato` INT NOT NULL,
  `tiempoInicio` VARCHAR(45) NULL,
  PRIMARY KEY (`idTiempoDisponibilidad`),
  INDEX `fk__Bicicletas1_idx` (`Bicicletas_idBicicletas` ASC),
  INDEX `fk__Contrato1_idx` (`Contrato_idContrato` ASC),
  CONSTRAINT `fk__Bicicletas1`
    FOREIGN KEY (`Bicicletas_idBicicletas`)
    REFERENCES `BIKEN_BDPY`.`Bicicletas` (`idBicicletas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__Contrato1`
    FOREIGN KEY (`Contrato_idContrato`)
    REFERENCES `BIKEN_BDPY`.`Contrato` (`idContrato`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
